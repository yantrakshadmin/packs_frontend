{"version":3,"sources":["../../common/formFields/PFEP/SCSExistingPackagingDetails.formFields.js","forms/PFEP/SCSExistingPackagingDetails.form.js"],"names":["Row01FF","key","type","FORM_ELEMENT_TYPES","SWITCH","others","defaultValue","customLabel","kwargs","placeholder","SELECT","selectOptions","colSpan","Row02FF","INPUT","min","Row03FF","i","PFEPProductDetailsForm","id","onCancel","active","onNext","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","data","pfepData","newPack","setNewPack","innerPart","setInnerPart","useEffect","new_packaging","inner_partition","submit","ADD_PFEP_DATA","STOP_STEP_LOADING","spinning","orientation","onFinish","initialValues","current_packaging","layout","autoComplete","style","justifyContent","slice","map","item","idx","span","toString","className","formItem","onChange","v","List","name","fields","add","remove","field","index","align","top","block","disabled","noLabel","formOptions","fieldKey","onClick","MinusCircleOutlined","Item","PlusOutlined","FILE_DRAG_DROP","multiple","info","fileList","forEach","f","status","message","error","justify","htmlType","ArrowRightOutlined","fontSize"],"mappings":"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","file":"static/js/90.d5849484.chunk.js","sourcesContent":["import {FORM_ELEMENT_TYPES} from 'web/src/constants/formFields.constant';\n\nconst packagingTypeChoices = [\n  'Corrugated Box',\n  'Wooden Box',\n  'Foldable Crate',\n  'STD Foldable Crate',\n  'Crate',\n  'PP Box',\n  'FLC (1200x800x950)',\n  'STD FLC (1200x800x950)',\n  'FSC (1200x800x650)',\n  'STD FSC (1200x800x650)',\n  'Wooden Pallet',\n  'Plastic Pallet',\n  'Palletized Sol - Corrugated Box',\n  'Palletized Sol - Wooden box',\n  'Palletized Sol - Foldable crate',\n  'Palletized Sol - PP Box',\n  'Palletized Sol - Bin',\n  'Wire Mesh Container',\n  'Other solution',\n];\n\nexport const Row01FF = [\n  {\n    key: 'new_packaging',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: {\n      defaultValue: false,\n    },\n    customLabel: 'New Packaging',\n  },\n  {\n    key: 'packaging_type',\n    //rules: [{required: true, message: 'Please select status!'}],\n    kwargs: {\n      placeholder: 'Select',\n    },\n    type: FORM_ELEMENT_TYPES.SELECT,\n    others: {selectOptions: packagingTypeChoices},\n    customLabel: 'Packaging Type',\n    colSpan: 6,\n  },\n];\n\nexport const Row02FF = [\n  {\n    key: 'inner_partition',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: {\n      defaultValue: false,\n    },\n    customLabel: 'Inner Partition',\n  },\n  {\n    key: 'dimension',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Dimension (mm)',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Dimension (mm)',\n    colSpan: 4,\n  },\n  {\n    key: 'parts_per_pocket',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Parts/Pocket',\n      type: 'number',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Parts/Pocket',\n    colSpan: 4,\n  },\n  {\n    key: 'matrix_info',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Matrix Info',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Matrix Info',\n    colSpan: 4,\n  },\n  {\n    key: 'no_of_layers',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'No. of Layers',\n      type: 'number',\n      min: 0,\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'No. of Layers',\n    colSpan: 4,\n  },\n  {\n    key: 'parts_per_layer',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Parts/Layer',\n      type: 'number',\n      min: 0,\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Parts/Layer',\n    colSpan: 4,\n  },\n];\n\nexport const Row03FF = [\n  {\n    key: 'spesheet_pm',\n    kwargs: {\n      type: 'number',\n      placeholder: 'Separator Sheet Per PM',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Separator Sheet Per PM',\n  },\n  {\n    key: 'stacking_nesting',\n    kwargs: {\n      placeholder: 'Stacking, Nesting or Multiple parts in single Pocket. If any?',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Stacking, Nesting or Multiple parts in single Pocket.',\n  },\n  {\n    key: 'total_parts_per_pm',\n    kwargs: {\n      type: 'number',\n      placeholder: 'Total Part Per PM',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Total Part Per PM',\n  },\n  {\n    key: 'pm_loaded_weight',\n    kwargs: {\n      type: 'number',\n      placeholder: 'PM Loaded Weight(Kgs)',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'PM Loaded Weight(Kgs)',\n  },\n  {\n    key: 'palletized_sol_details',\n    kwargs: {\n      placeholder: 'Pallatized Solution Details',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Pallatized Solution Details',\n  },\n  {\n    key: 'current_packaging',\n    type: FORM_ELEMENT_TYPES.SELECT,\n    others: {\n      defaultValue: 'Returnable',\n      selectOptions: ['Returnable', 'Non-Returnable'],\n    },\n    customLabel: 'Current Packaging Type',\n  },\n  {\n    key: 'trips_per_pm',\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Trips Per PM Before Scraping',\n    kwargs: {\n      placeholder: 'Trips Per PM Before Scraping',\n    },\n  },\n  {\n    key: 'price_per_unit',\n    kwargs: {\n      type: 'number',\n      placeholder: 'Price Per Unit',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Price Per Unit',\n  },\n  {\n    key: 'remarks2',\n    kwargs: {\n      placeholder: 'Remark',\n    },\n    customLabel: 'Remarks',\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n  },\n  //   {\n  //     key: 'packaging_length',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Packaging Length',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     customLabel: 'Packaging Length(mm)',\n  //   },\n  //   {\n  //     key: 'packaging_breadth',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Packaging Breadth',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     customLabel: 'Packaging Breadth(mm)',\n  //   },\n  //   {\n  //     key: 'packaging_height',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Packaging Height',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     customLabel: 'Packaging Height(mm)',\n  //   },\n  //   {\n  //     key: 'pocket_length',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Pocket Length',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     customLabel: 'Pocket Length(mm)',\n  //   },\n  //   {\n  //     key: 'pocket_breadth',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Pocket Breadth',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     customLabel: 'Pocket Breadth(mm)',\n  //   },\n  //   {\n  //     key: 'pocket_height',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Pocket Height',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     customLabel: 'Pocket Height(mm)',\n  //   },\n\n  //   {\n  //     key: 'inserts_pm',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Inserts Per Packaging Material',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     others: null,\n  //     customLabel: 'Inserts Per PM',\n  //   },\n  //   {\n  //     key: 'matrix_details',\n  //     kwargs: {\n  //       placeholder: 'Pocket Matrix Detail',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     others: null,\n  //     customLabel: 'Pocket Matrix Detail',\n  //   },\n  //   {\n  //     key: 'parts_per_pocket',\n  //     kwargs: {\n  //       placeholder: 'Parts per Pocket',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     others: null,\n  //     customLabel: 'Parts per Pocket',\n  //   },\n  //   {\n  //     key: 'parts_per_layer',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Part Per Layer',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     others: null,\n  //     customLabel: 'Part Per Layer',\n  //   },\n  //   {\n  //     key: 'current_packaging',\n  //     type: FORM_ELEMENT_TYPES.SELECT,\n  //     others: {\n  //       defaultValue: 'Returnable',\n  //       selectOptions: ['Returnable', 'Non Returnable'],\n  //     },\n  //     customLabel: 'Current Packaging Type',\n  //   },\n  //   {\n  //     key: 'wastage_pm',\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     others: null,\n  //     customLabel: 'Wastage Of PM',\n  //     kwargs: {\n  //       placeholder: 'Wastage Of PM',\n  //     },\n  //   },\n\n  //   {\n  //     key: 'pocket_length1',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Pocket 2 Length',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     customLabel: 'Pocket 2 Length(mm)',\n  //   },\n  //   {\n  //     key: 'pocket_breadth1',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Pocket 2 Breadth',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     customLabel: 'Pocket 2 Breadth(mm)',\n  //   },\n  //   {\n  //     key: 'pocket_height1',\n  //     kwargs: {\n  //       type: 'number',\n  //       placeholder: 'Pocket 2 Height',\n  //     },\n  //     type: FORM_ELEMENT_TYPES.INPUT,\n  //     customLabel: 'Pocket 2 Height(mm)',\n  //   },\n];\n","import React, {useEffect, useState} from 'react';\nimport {Form, Col, Row, Button, Divider, Spin, message} from 'antd';\nimport formItem from 'hocs/formItem.hoc';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {ADD_PFEP_DATA, STOP_STEP_LOADING} from 'common/actions';\nimport {\n  Row01FF,\n  Row02FF,\n  Row03FF,\n} from 'common/formFields/PFEP/SCSExistingPackagingDetails.formFields';\nimport {ArrowRightOutlined, PlusOutlined, MinusCircleOutlined} from '@ant-design/icons';\nimport {FORM_ELEMENT_TYPES} from 'constants/formFields.constant';\n\nexport const PFEPProductDetailsForm = ({id, onCancel, active, onNext}) => {\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const state = useSelector((e) => e.data.pfepData);\n\n  const [newPack, setNewPack] = useState(false);\n  const [innerPart, setInnerPart] = useState(false);\n\n  useEffect(() => {\n    if (state.new_packaging) {\n      setNewPack(state.new_packaging);\n    }\n    if (state.inner_partition) {\n      setInnerPart(state.inner_partition);\n    }\n  }, []);\n\n  const submit = async (data) => {\n    setLoading(true);\n    await dispatch({type: ADD_PFEP_DATA, data});\n    setLoading(false);\n    if (active === 2) {\n      onNext();\n    }\n  };\n  useEffect(() => {\n    if (active !== 2) {\n      form.submit();\n      dispatch({type: STOP_STEP_LOADING});\n    }\n  }, [active]);\n  return (\n    <Spin spinning={loading}>\n      <Divider orientation=\"left\">Packaging Details</Divider>\n      <Form\n        onFinish={submit}\n        initialValues={{\n          ...state,\n          current_packaging: state.current_packaging ? state.current_packaging : 'Returnable',\n        }}\n        form={form}\n        layout=\"vertical\"\n        // hideRequiredMark\n        autoComplete=\"off\">\n        <Row style={{justifyContent: 'left'}}>\n          {Row01FF.slice(0, 1).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className=\"p-2\">\n                {formItem({\n                  ...item,\n                  kwargs: {\n                    ...item.kwargs,\n                    onChange: (v) => {\n                      setNewPack(v);\n                    },\n                  },\n                })}\n              </div>\n            </Col>\n          ))}\n        </Row>\n\n        {!newPack ? (\n          <>\n            <Row style={{justifyContent: 'left'}}>\n              {Row02FF.slice(0, 1).map((item, idx) => (\n                <Col span={6}>\n                  <div key={idx.toString()} className=\"p-2\">\n                    {formItem({\n                      ...item,\n                      kwargs: {\n                        ...item.kwargs,\n                        onChange: (v) => {\n                          setInnerPart(v);\n                        },\n                      },\n                    })}\n                  </div>\n                </Col>\n              ))}\n            </Row>\n            {innerPart ? (\n              <Form.List name=\"insert_types\">\n                {(fields, {add, remove}) => {\n                  return (\n                    <div>\n                      {fields.map((field, index) => (\n                        <Row align=\"middle\">\n                          <Col span={3}>\n                            <Button\n                              type=\"danger\"\n                              style={index !== 0 ? {top: '-2vh'} : null}\n                              block\n                              disabled>\n                              {`Insert Type ${index + 1}`}\n                            </Button>\n                          </Col>\n                          {Row02FF.slice(1).map((item) => (\n                            <Col span={item.colSpan}>\n                              <div className=\"p-2\">\n                                {formItem({\n                                  ...item,\n                                  noLabel: index !== 0,\n                                  form,\n                                  others: {\n                                    formOptions: {\n                                      ...field,\n                                      name: [field.name, item.key],\n                                      fieldKey: [field.fieldKey, item.key],\n                                    },\n                                  },\n                                })}\n                              </div>\n                            </Col>\n                          ))}\n                          <Col span={1}>\n                            <Button\n                              type=\"danger\"\n                              style={index !== 0 ? {top: '-2vh'} : null}\n                              onClick={() => {\n                                remove(field.name);\n                              }}\n                              block>\n                              <MinusCircleOutlined />\n                            </Button>\n                          </Col>\n                        </Row>\n                      ))}\n                      <Form.Item>\n                        <Button\n                          type=\"dashed\"\n                          onClick={() => {\n                            add();\n                          }}\n                          block>\n                          <PlusOutlined /> Add Insert Type\n                        </Button>\n                      </Form.Item>\n                    </div>\n                  );\n                }}\n              </Form.List>\n            ) : null}\n\n            <Divider orientation=\"left\" />\n\n            <Row style={{justifyContent: 'left'}}>\n              {Row01FF.slice(1, 2).map((item, idx) => (\n                <Col span={6}>\n                  <div key={idx.toString()} className=\"p-2\">\n                    {formItem(item)}\n                  </div>\n                </Col>\n              ))}\n              {Row03FF.map((item, idx) => (\n                <Col span={6}>\n                  <div key={idx.toString()} className=\"p-2\">\n                    {formItem(item)}\n                  </div>\n                </Col>\n              ))}\n              <Col span={6}>\n                <div className=\"p-2\">\n                  {formItem({\n                    key: 'fileB',\n                    type: FORM_ELEMENT_TYPES.FILE_DRAG_DROP,\n                    customLabel: 'Upload Files',\n                    //rules: [{required: id ? false : true, message: 'Please upload Files!'}],\n                    kwargs: {\n                      placeholder: 'Upload',\n                      multiple: true,\n                      onChange(info) {\n                        const {fileList} = info;\n                        fileList.forEach((f) => {\n                          if (f.status === 'error') {\n                            message.error(`${f.name} file upload failed.`);\n                          }\n                        });\n                      },\n                    },\n                  })}\n                </div>\n              </Col>\n            </Row>\n          </>\n        ) : null}\n\n        <Row justify=\"space-between\">\n          <div className=\"row\">\n            <Button type=\"primary\" htmlType=\"submit\" disabled>\n              Submit\n            </Button>\n            <div className=\"p-2\" />\n            <Button type=\"primary\" onClick={onCancel}>\n              Cancel\n            </Button>\n          </div>\n          <Button type=\"link\" htmlType=\"submit\">\n            <ArrowRightOutlined style={{fontSize: 30}} />\n          </Button>\n        </Row>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default PFEPProductDetailsForm;\n"],"sourceRoot":""}