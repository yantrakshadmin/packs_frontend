{"version":3,"sources":["../../common/formFields/createCP/logisticsCreateCP.formFields.js","forms/CreateCP/logisticsCreateCP.form.js"],"names":["logisticCreateCPFormFields","key","type","FORM_ELEMENT_TYPES","INPUT","kwargs","placeholder","others","formOptions","noStyle","customLabel","disabled","i","LogisticCreateCPForm","id","onCancel","active","onDone","onNext","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","data","createCPData","submit","ADD_CREATE_CP_DATA","useEffect","STOP_STEP_LOADING","handleFieldsChange","useCallback","name","currentInputField","getFieldValue","setFieldsValue","ifNanReturnZero","spinning","orientation","onFinish","initialValues","layout","onFieldsChange","autoComplete","style","justifyContent","slice","map","item","idx","span","toString","className","formItem","justify","htmlType","onClick","ArrowRightOutlined","fontSize"],"mappings":"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","file":"static/js/83.10e1b428.chunk.js","sourcesContent":["// min_warehouse = models.FloatField(default=0, blank=True, null=True)\n// transportation_w1_c1 = models.FloatField(default=0, blank=True, null=True)\n// transportation_c2_w2 = models.FloatField(default=0, blank=True, null=True)\n// transportation_w2_w1 = models.FloatField(default=0, blank=True, null=True)\n// total_cost_supply_chain = models.FloatField(default=0, blank=True, null=True)\n// labor_cost_perton = models.FloatField(default=0, blank=True, null=True)\n// repair_reconditioning = models.FloatField(default=0, blank=True, null=True)\n// other_cost = models.FloatField(default=0, blank=True, null=True)\n// total_cost = models.FloatField(default=0, blank=True, null=True)\n//\n\nimport { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\n\nexport const logisticCreateCPFormFields = [\n  {\n    key: 'min_warehouse',\n    type: FORM_ELEMENT_TYPES.INPUT,\n    kwargs: {\n      placeholder: 'Minimum Warehouse',\n    },\n    others: {\n      formOptions:{ noStyle:true }\n\n    },\n    customLabel: 'Minimum Warehouse'\n  },\n  {\n    key: 'transportation_w1_c1',\n    kwargs: {\n      placeholder: 'Transportation W1 C1',\n    },\n    others: {\n      formOptions:{ noStyle:true }\n\n    },    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Transportation W1 C1',\n  },\n  {\n    key: 'transportation_c2_w2',\n    type: FORM_ELEMENT_TYPES.INPUT,\n    kwargs: {\n      placeholder: 'Transportation C2 W2',\n    },\n    others: {\n      formOptions:{ noStyle:true }\n\n    },    customLabel: 'Transportation C2 W2'\n  },\n  {\n    key: 'transportation_w2_w1',\n    kwargs: {\n      placeholder: 'Transportation W2 W1',\n    },\n    others: {\n      formOptions:{ noStyle:true }\n\n    },    type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Transportation W2 W1',\n  },\n  {\n    key: 'total_cost_supply_chain',\n    kwargs: {\n      placeholder: 'Total Cost Supply Chain',\n      disabled: true,\n    },\n    others: {\n      formOptions:{ noStyle:true }\n\n    },    type: FORM_ELEMENT_TYPES.INPUT,\n\n    customLabel: 'Total Cost Supply Chain',\n  },\n  {\n    key: 'labor_cost_perton',\n    kwargs: {\n      placeholder: 'Labour Cost Perton',\n\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: {\n      formOptions:{ noStyle:true }\n\n    },\n    customLabel: 'Labour Cost Perton',\n  },\n  {\n    key: 'repair_reconditioning',\n    kwargs: {\n      placeholder: 'Repair Reconditioning',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: {\n      formOptions:{ noStyle:true }\n\n    },\n    customLabel: 'Repair Reconditioning',\n  },\n  {\n    key: 'other_cost',\n    kwargs: {\n      placeholder: 'Other Cost',\n\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: {\n      formOptions:{ noStyle:true }\n\n    },\n    customLabel: 'Other Cost',\n  },\n  {\n    key: 'total_cost',\n    kwargs: {\n      placeholder: 'Total Cost',\n      disabled: true,\n\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: {\n      formOptions:{ noStyle:true }\n\n    },\n    customLabel: 'Total Cost',\n  },\n\n]\n","import React, { useEffect, useState,useCallback } from 'react';\nimport { Form, Col, Row, Button, Divider, Spin } from 'antd';\nimport formItem from 'hocs/formItem.hoc';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_CREATE_CP_DATA, STOP_STEP_LOADING } from 'common/actions';\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport { logisticCreateCPFormFields }\n  from 'common/formFields/createCP/logisticsCreateCP.formFields';\n\nimport { ifNanReturnZero } from 'common/helpers/mrHelper';\n\n\nexport const LogisticCreateCPForm = ({ id, onCancel,onDone,active,onNext }) => {\n  const [loading,setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const state =  useSelector(e=>(e.data.createCPData))\n\n  const submit = async (data) =>{\n    setLoading(true)\n    await dispatch({ type:ADD_CREATE_CP_DATA,data });\n    setLoading(false)\n    if(active===2){\n      onNext();\n    }\n  }\n  useEffect( ()=>{\n    if(active!==2){\n      form.submit()\n      dispatch({ type:STOP_STEP_LOADING })\n    }\n  },[active])\n\n\n  const handleFieldsChange = useCallback(data => {\n\n\t\tif(data[0]){\n\t\t\tif(data[0].name) {\n\n        const currentInputField = data[0].name[0];\n        console.log(currentInputField);\n\n\n        if (currentInputField===\"min_warehouse\" || currentInputField===\"transportation_w1_c1\" || currentInputField===\"transportation_c2_w2\" || currentInputField===\"transportation_w2_w1\" || currentInputField===\"total_cost_supply_chain\" || currentInputField===\"labor_cost_perton\" || currentInputField===\"repair_reconditioning\" || currentInputField===\"other_cost\" || currentInputField===\"total_cost\") {\n          if ( form.getFieldValue(\"min_warehouse\") || form.getFieldValue(\"transportation_w1_c1\") || form.getFieldValue(\"transportation_c2_w2\") || form.getFieldValue(\"transportation_w2_w1\") ) {\n            form.setFieldsValue({\n              \"total_cost_supply_chain\" : ifNanReturnZero(form.getFieldValue(\"min_warehouse\"))+ifNanReturnZero(form.getFieldValue(\"transportation_w1_c1\"))+ifNanReturnZero(form.getFieldValue(\"transportation_c2_w2\"))+ifNanReturnZero(form.getFieldValue(\"transportation_w2_w1\")),\n            })\n          } else {\n            form.setFieldsValue({\n              \"total_cost_supply_chain\" : 0,\n            })\n          }\n\n          if ( form.getFieldValue(\"total_cost_supply_chain\") || form.getFieldValue(\"labor_cost_perton\") || form.getFieldValue(\"repair_reconditioning\") || form.getFieldValue(\"other_cost\") ) {\n            form.setFieldsValue({\n              \"total_cost\" : ifNanReturnZero(form.getFieldValue(\"total_cost_supply_chain\"))+ifNanReturnZero(form.getFieldValue(\"labor_cost_perton\"))+ifNanReturnZero(form.getFieldValue(\"repair_reconditioning\"))+ifNanReturnZero(form.getFieldValue(\"other_cost\")),\n            })\n          } else {\n            form.setFieldsValue({\n              \"total_cost\" : 0,\n            })\n          }\n        }\n\n\t\t\t}\n\t\t}\n\n  \t},[form,])\n\n\n  return (\n    <Spin spinning={loading}>\n      <Divider orientation='left'>Logistic Details</Divider>\n      <Form\n        onFinish={submit}\n        form={form}\n        initialValues={\n          { ...state }\n        }\n        layout='vertical'\n        onFieldsChange={handleFieldsChange}\n        // hideRequiredMark\n        autoComplete='off'\n      >\n        <Row style={{ justifyContent: 'left' }}>\n          {logisticCreateCPFormFields.slice(0, 4).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className='p-2'>\n                {item.customLabel}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row style={{ justifyContent: 'left' }}>\n          {logisticCreateCPFormFields.slice(0, 4).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className='p-2'>\n                {formItem(item)}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row style={{ justifyContent: 'left' }}>\n          {logisticCreateCPFormFields.slice(4, 8).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className='p-2'>\n                {item.customLabel}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row style={{ justifyContent: 'left' }}>\n          {logisticCreateCPFormFields.slice(4, 8).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className='p-2'>\n                {formItem(item)}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row style={{ justifyContent: 'left' }}>\n          {logisticCreateCPFormFields.slice(8, 9).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className='p-2'>\n                {item.customLabel}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row style={{ justifyContent: 'left' }}>\n          {logisticCreateCPFormFields.slice(8, 9).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className='p-2'>\n                {formItem(item)}\n              </div>\n            </Col>\n          ))}\n        </Row>\n        <Row justify='space-between'>\n          <div className='row'>\n            <Button type='primary' htmlType='submit' disabled>\n              Submit\n            </Button>\n            <div className='p-2' />\n            <Button type='primary' onClick={onCancel}>\n              Cancel\n            </Button>\n          </div>\n          <Button type='link' htmlType='submit'>\n            <ArrowRightOutlined style={{ fontSize:30 }}  />\n          </Button>\n        </Row>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default LogisticCreateCPForm;\n\n"],"sourceRoot":""}