{"version":3,"sources":["../../common/helpers/mrHelper.js","../../common/formFields/PFEP/SCSStockKeeping.formFields.js","forms/PFEP/SCSStockKeeping.form.js"],"names":["mergeArray","a","b","map","item","obj","_","find","i","mr","id","is_rejected","reason","remarks","statusCheck","isAllocated","isRejected","status","filterActive","data","filter","el","active","ifNanReturnZero","num","parseInt","ifNanReturnZeroFloat","parseFloat","ifNotStrReturnA","s","String","numberWithCommas","x","toString","replace","Row01FF","key","kwargs","placeholder","type","FORM_ELEMENT_TYPES","INPUT","others","customLabel","colSpan","PFEPStockKeepingForm","onCancel","onNext","onDone","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","pfepData","submit","ADD_PFEP_DATA","useEffect","STOP_STEP_LOADING","handleFieldsChange","useCallback","name","formListName","fieldKey","thisField","temp","getFieldValue","flowsX","Object","assign","total_cycle_time","setFieldsValue","spinning","onFinish","initialValues","layout","onFieldsChange","autoComplete","orientation","List","fields","add","remove","field","index","title","gutter","align","span","formItem","formOptions","onClick","block","MinusCircleOutlined","Item","PlusOutlined","justify","className","htmlType","disabled","ArrowRightOutlined","style","fontSize"],"mappings":"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","file":"static/js/80.d48fd0c5.chunk.js","sourcesContent":["import _ from 'lodash';\n\nexport const mergeArray = (a, b) => {\n  return a.map((item) => {\n    const obj = _.find(b, (i) => i.mr === item.id);\n    if (obj) {\n      return {\n        ...item,\n        is_rejected: obj.is_rejected,\n        reason: obj.reason,\n        mr: obj.mr,\n        remarks: obj.remarks,\n      };\n    }\n    return item;\n  });\n};\n\nexport const statusCheck = (isAllocated, isRejected) => {\n  let status = 'Allocated';\n  if (!isAllocated && !isRejected) {\n    status = 'Pending';\n  } else if (isAllocated && !isRejected) {\n    status = 'Allocated';\n  } else if (!isAllocated && isRejected) {\n    status = 'Rejected';\n  }\n  return status;\n};\n\nexport const filterActive = (_, data) => {\n  return _.filter(data, (el) => el.active);\n};\n\nexport const ifNanReturnZero = (num) => {\n  return parseInt(num) ? parseInt(num) : 0;\n};\n\nexport const ifNanReturnZeroFloat = (num) => {\n  return parseFloat(num) ? parseFloat(num) : 0;\n};\n\nexport const ifNotStrReturnA = (s) => {\n  return String(s) ? String(s) : 'a';\n};\n\nexport const numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import {FORM_ELEMENT_TYPES} from 'web/src/constants/formFields.constant';\n\nexport const Row01FF = [\n  {\n    key: 'sender',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Name & Location',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Sender',\n    colSpan: 4,\n  },\n  {\n    key: 'receiver',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Name & Location',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Receiver',\n    colSpan: 4,\n  },\n  {\n    key: 'min_volume',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Min. Volume Per Month',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Min. Volume Per Month',\n    colSpan: 4,\n  },\n  {\n    key: 'peak_volume',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Peak Volume Per Month',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Peak Volume Per Month',\n    colSpan: 4,\n  },\n  {\n    key: 'sender_inventory',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Sender Inventory TAT',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Sender Inventory TAT',\n    colSpan: 4,\n  },\n  {\n    key: 'sender_warehouse',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Sender Warehouse TAT',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Sender Warehouse TAT',\n    colSpan: 4,\n  },\n  {\n    key: 'transit_time',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Transit Time',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Transit Time',\n    colSpan: 3,\n  },\n  {\n    key: 'receiver_inventory',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Receiver Inventory TAT',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Receiver Inventory TAT',\n    colSpan: 4,\n  },\n  {\n    key: 'receiver_warehouse',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Receiver Warehouse TAT',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Receiver Warehouse TAT',\n    colSpan: 4,\n  },\n  {\n    key: 'return_tat',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Return TAT',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Return TAT',\n    colSpan: 3,\n  },\n  {\n    key: 'total_cycle_time',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Total Cycle Time',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Total Cycle Time',\n    colSpan: 3,\n  },\n  {\n    key: 'dispatch_frequency',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Dispatch Frequency',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Dispatch Frequency',\n    colSpan: 3,\n  },\n  {\n    key: 'remarks',\n    //rules: [{required: true, message: 'Required!'}],\n    kwargs: {\n      placeholder: 'Remarks',\n    },\n    type: FORM_ELEMENT_TYPES.INPUT,\n    others: null,\n    customLabel: 'Remarks',\n    colSpan: 3,\n  },\n];\n","import React, {useEffect, useState, useCallback} from 'react';\nimport {Form, Col, Row, Button, Divider, Spin, Card} from 'antd';\nimport formItem from 'hocs/formItem.hoc';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {ADD_PFEP_DATA, STOP_STEP_LOADING} from 'common/actions';\nimport {ArrowRightOutlined, MinusCircleOutlined, PlusOutlined} from '@ant-design/icons';\nimport {Row01FF} from 'common/formFields/PFEP/SCSStockKeeping.formFields';\nimport {ifNanReturnZero} from 'common/helpers/mrHelper';\n\nexport const PFEPStockKeepingForm = ({id, onCancel, onDone, onNext, active}) => {\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const state = useSelector((e) => e.data.pfepData);\n\n  const submit = async (data) => {\n    setLoading(true);\n    await dispatch({type: ADD_PFEP_DATA, data});\n    setLoading(false);\n    if (active === 1) {\n      onNext();\n    }\n  };\n\n  useEffect(() => {\n    if (active !== 1) {\n      form.submit();\n      dispatch({type: STOP_STEP_LOADING});\n    }\n  }, [active]);\n\n  const handleFieldsChange = useCallback(\n    (data) => {\n      if (data[0]) {\n        if (data[0].name) {\n          if (data[0].name[2]) {\n            const formListName = data[0].name[0];\n            const fieldKey = data[0].name[1];\n            const thisField = data[0].name[2];\n            if (\n              thisField === 'sender_inventory' ||\n              thisField === 'sender_warehouse' ||\n              thisField === 'transit_time' ||\n              thisField === 'receiver_inventory' ||\n              thisField === 'receiver_warehouse' ||\n              thisField === 'return_tat'\n            ) {\n              const temp =\n                ifNanReturnZero(form.getFieldValue([formListName, fieldKey, 'sender_inventory'])) +\n                ifNanReturnZero(form.getFieldValue([formListName, fieldKey, 'sender_warehouse'])) +\n                ifNanReturnZero(form.getFieldValue([formListName, fieldKey, 'transit_time'])) +\n                ifNanReturnZero(\n                  form.getFieldValue([formListName, fieldKey, 'receiver_inventory']),\n                ) +\n                ifNanReturnZero(\n                  form.getFieldValue([formListName, fieldKey, 'receiver_warehouse']),\n                ) +\n                ifNanReturnZero(form.getFieldValue([formListName, fieldKey, 'return_tat']));\n              const flowsX = form.getFieldValue(formListName);\n              Object.assign(flowsX[fieldKey], {\n                total_cycle_time: temp,\n              });\n              form.setFieldsValue({formListName: flowsX});\n            }\n          }\n        }\n      }\n    },\n    [form],\n  );\n\n  return (\n    <Spin spinning={loading}>\n      <Form\n        onFinish={submit}\n        initialValues={state}\n        form={form}\n        layout=\"vertical\"\n        onFieldsChange={handleFieldsChange}\n        // hideRequiredMark\n        autoComplete=\"off\">\n        <Divider orientation=\"left\">Supply chain details</Divider>\n\n        <Form.List name=\"sks\">\n          {(fields, {add, remove}) => {\n            return (\n              <>\n                {fields.map((field, index) => (\n                  <Card title={`Flow ${index + 1}`}>\n                    <Row gutter={5} align=\"middle\">\n                      {Row01FF.map((item) => (\n                        <Col span={item.colSpan}>\n                          {formItem({\n                            ...item,\n                            form,\n                            others: {\n                              formOptions: {\n                                ...field,\n                                name: [field.name, item.key],\n                                fieldKey: [field.fieldKey, item.key],\n                              },\n                            },\n                          })}\n                        </Col>\n                      ))}\n                      <Col span={1}>\n                        <Button\n                          type=\"danger\"\n                          onClick={() => {\n                            remove(field.name);\n                          }}\n                          block>\n                          <MinusCircleOutlined />\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Card>\n                ))}\n                <br />\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => {\n                      add();\n                    }}\n                    block>\n                    <PlusOutlined /> Add\n                  </Button>\n                </Form.Item>\n              </>\n            );\n          }}\n        </Form.List>\n\n        <Row justify=\"space-between\">\n          <div className=\"row\">\n            <Button type=\"primary\" htmlType=\"submit\" disabled>\n              Submit\n            </Button>\n            <div className=\"p-2\" />\n            <Button type=\"primary\" onClick={onCancel}>\n              Cancel\n            </Button>\n          </div>\n          <Button type=\"link\" htmlType=\"submit\">\n            <ArrowRightOutlined style={{fontSize: 30}} />\n          </Button>\n        </Row>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default PFEPStockKeepingForm;\n"],"sourceRoot":""}