{"version":3,"sources":["components/printCP.js"],"names":["Title","Paragraph","PrintCp","state","location","columns","title","key","dataIndex","render","solution","Object","keys","map","span","dataSource","field","value","sender_client","scs_id","contact_person","contact_no","email","table3","CreateTable","left","right","className","d","Date","utc","getTime","getTimezoneOffset","ist","toLocaleString","src","process","alt","split","id","level","i","size","pagination","bordered","receiverDetails"],"mappings":"sOAIOA,G,OAAK,IAALA,OAAOC,EAAS,IAATA,UAEDC,EAAU,SAAH,GAAoB,IAC/BC,EADwB,EAARC,SAChBD,MAGDE,EAAU,CACd,CACEC,MAAO,YACPC,IAAK,YACLC,UAAW,aAOb,CACEF,MAAO,8BACPC,IAAK,6BACLC,UAAW,6BACXC,OAAQ,SAACC,GAAQ,OACf,2BACGC,OAAOC,KAAKF,GAAUG,KAAI,SAACN,GAAG,OAC7B,uBAAKO,KAAM,IACRJ,EAASH,GAAI,IAAGA,EACjB,oCAMV,CACED,MAAO,gCACPE,UAAW,yBACXD,IAAK,0BAEP,CACED,MAAO,sBACPE,UAAW,sBACXD,IAAK,uBAEP,CACED,MAAO,+BACPC,IAAK,YACLC,UAAW,aAEb,CACEF,MAAO,qBACPE,UAAW,yBACXD,IAAK,0BAEP,CACED,MAAO,oBACPE,UAAW,aACXD,IAAK,eAIHQ,EAAa,CACjB,CACER,IAAK,IACLS,MAAO,qBACPC,MAAOd,EAAMe,eAAiB,KAEhC,CACEX,IAAK,IACLS,MAAO,kBACPC,MAAOd,EAAMgB,OAAOC,gBAAkB,KAExC,CACEb,IAAK,IACLS,MAAO,kBACPC,MAAOd,EAAMgB,OAAOE,YAAc,KAEpC,CACEd,IAAK,IACLS,MAAO,YACPC,MAAOd,EAAMgB,OAAOG,OAAS,MAG3BC,EAAS,CACb,CACEP,MAAO,gCACPT,IAAK,oBACLU,MAAO,mDAET,CAACD,MAAO,oBAAqBT,IAAK,kBAAmBU,MAAO,2BAGxDO,EAAc,SAAH,OAAKC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAK,OAC/B,uBAAKC,UAAU,mBACb,uBAAKb,KAAM,GAAIa,UAAU,QACtBF,GAEH,yBAAKE,UAAU,mCACb,yBAAKA,UAAU,sBAEjB,uBAAKb,KAAM,GAAIa,UAAU,QACtBD,KAIDE,EAAI,IAAIC,KACRC,EAAMF,EAAEG,UAAoC,IAAxBH,EAAEI,oBAEtBC,EADK,IAAIJ,KAAKC,EAAM,OACXI,iBACf,OACE,yBAAKP,UAAU,sBACb,2BACE,uBAAKb,KAAM,IACT,yBAAKa,UAAU,oCACb,yBAAKA,UAAU,iBACb,yBAAKQ,IAAG,UAAKC,GAAsB,kBAAkBT,UAAU,GAAGU,IAAI,eAExE,6BACE,8BACE,sCACCJ,EAAIK,MAAM,KAAK,GAChB,6BACA,qCAEGnC,EAAMoC,SAOnB,6BACA,6BACA,2BACE,uBAAKzB,KAAM,IACT,kBAACd,EAAK,CACJwC,MAAO,EACPb,UAAU,iEAA+D,gBAC3DxB,EAAMe,iBAI1B,6BACA,kBAACM,EAAW,CACVC,KAAMV,EAAWF,KAAI,SAAC4B,EAAGlC,GAAG,OAC1B,uBAAKA,IAAKkC,EAAElC,KACV,uBAAKO,KAAM,GAAIa,UAAU,QACvB,uBAAGpB,IAAKkC,EAAElC,KAAMkC,EAAEzB,YAIxBU,MAAOX,EAAWF,KAAI,SAAC4B,EAAGlC,GAAG,OAC3B,uBAAKA,IAAKkC,EAAElC,KACV,uBAAKO,KAAM,GAAIa,UAAU,QACtBc,EAAExB,aAKX,6BAsBA,6BACA,kBAACO,EAAW,CACVC,KAAMF,EAAOV,KAAI,SAAC4B,EAAGlC,GAAG,OACtB,uBAAKA,IAAKkC,EAAElC,KACV,uBAAKO,KAAM,GAAIa,UAAU,QACvB,uBAAGpB,IAAKkC,EAAElC,KAAMkC,EAAEzB,YAIxBU,MAAOH,EAAOV,KAAI,SAAC4B,EAAGlC,GAAG,OACvB,uBAAKA,IAAKkC,EAAElC,KACV,uBAAKO,KAAM,GAAIa,UAAU,QACvB,2BAAIc,EAAExB,cAKd,6BACA,uBACEyB,KAAK,QACLC,YAAY,EACZC,UAAQ,EACR7B,WAAYZ,EAAM0C,iBAAmB,GACrCxC,QAASA,IAEX,6BACA,kBAACJ,EAAS,oGAER,6BAAM,6EACqE,IAC1EE,EAAMe,cAKP,6BAAM,qFAEN,6BAAM,gDAOChB","file":"static/js/81.0107a3eb.chunk.js","sourcesContent":["import React from 'react';\nimport {Row, Col, Typography, Table} from 'antd';\nimport _ from 'lodash';\n\nconst {Title, Paragraph} = Typography;\n\nexport const PrintCp = ({location}) => {\n  const {state} = location;\n  // const { receiverDetails} = state;\n  console.log(state, 'data CP');\n  const columns = [\n    {\n      title: 'Part Name',\n      key: 'part_name',\n      dataIndex: 'part_name',\n    },\n    // {\n    //   title: 'Receiver Location',\n    //   dataIndex: 'receiver_location',\n    //   key: 'receiver_location',\n    // },\n    {\n      title: 'Proposed Packaging Solution',\n      key: 'proposed_solution_proposal',\n      dataIndex: 'proposed_solution_proposal',\n      render: (solution) => (\n        <Row>\n          {Object.keys(solution).map((key) => (\n            <Col span={24}>\n              {solution[key]} {key}\n              <br />\n            </Col>\n          ))}\n        </Row>\n      ),\n    },\n    {\n      title: 'No. of Component per Solution',\n      dataIndex: 'component_per_solution',\n      key: 'component_per_solution',\n    },\n    {\n      title: 'Price Per Component',\n      dataIndex: 'price_per_component',\n      key: 'price_per_component',\n    },\n    {\n      title: 'Total Trip Cost Per Solution',\n      key: 'trip_cost',\n      dataIndex: 'trip_cost',\n    },\n    {\n      title: 'Parts Volume/Month',\n      dataIndex: 'parts_volume_per_month',\n      key: 'parts_volume_per_month',\n    },\n    {\n      title: 'Cycle Time (Days)',\n      dataIndex: 'cycle_days',\n      key: 'cycle_days',\n    },\n  ];\n\n  const dataSource = [\n    {\n      key: '1',\n      field: 'Sender - Receiver:',\n      value: state.sender_client || '-',\n    },\n    {\n      key: '2',\n      field: 'Contact Person:',\n      value: state.scs_id.contact_person || '-',\n    },\n    {\n      key: '3',\n      field: 'Contact Number:',\n      value: state.scs_id.contact_no || '-',\n    },\n    {\n      key: '4',\n      field: 'Email ID:',\n      value: state.scs_id.email || '-',\n    },\n  ];\n  const table3 = [\n    {\n      field: 'Flow implementation timeline:',\n      key: 'flowImpementation',\n      value: '25-30 working days from day contract is signed.',\n    },\n    {field: 'Agreement Status:', key: 'agreementStatus', value: 'Agreement to be signed'},\n  ];\n\n  const CreateTable = ({left, right}) => (\n    <Row className=\"print-cp-border\">\n      <Col span={11} className=\"py-1\">\n        {left}\n      </Col>\n      <div className=\"row align-center justify-center\">\n        <div className=\"print-cp-divider\" />\n      </div>\n      <Col span={11} className=\"py-1\">\n        {right}\n      </Col>\n    </Row>\n  );\n  const d = new Date();\n  const utc = d.getTime() + d.getTimezoneOffset() * 60000;\n  const nd = new Date(utc + 3600000 * +5.5);\n  const ist = nd.toLocaleString();\n  return (\n    <div className=\"print-cp-container\">\n      <Row>\n        <Col span={24}>\n          <div className=\"row justify-between align-center\">\n            <div className=\"print-cp-logo\">\n              <img src={`${process.env.PUBLIC_URL}/home-logo.png`} className=\"\" alt=\"Yantraksh\" />\n            </div>\n            <div>\n              <text>\n                <b>Date : </b>\n                {ist.split(',')[0]}\n                <br />\n                <b>\n                  YNT/CP/\n                  {state.id}\n                </b>\n              </text>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <br />\n      <br />\n      <Row>\n        <Col span={24}>\n          <Title\n            level={4}\n            className=\"row align-center justify-center print-cp-gray print-cp-border\">\n            Proposal for {state.sender_client}\n          </Title>\n        </Col>\n      </Row>\n      <br />\n      <CreateTable\n        left={dataSource.map((i, key) => (\n          <Row key={i.key}>\n            <Col span={24} className=\"px-2\">\n              <b key={i.key}>{i.field}</b>\n            </Col>\n          </Row>\n        ))}\n        right={dataSource.map((i, key) => (\n          <Row key={i.key}>\n            <Col span={24} className=\"px-2\">\n              {i.value}\n            </Col>\n          </Row>\n        ))}\n      />\n      <br />\n      {/* <CreateTable\n        left={[{field: 'Receiver details :', key: 'reveiverDetails'}].map((i, key) => (\n          <Row key={i.key}>\n            <Col span={24} className=\"px-2\">\n              <b key={i.key}>{i.field}</b>\n            </Col>\n          </Row>\n        ))}\n        right={[\n          {\n            value: state.receiverDetails.length > 0 ? state.receiverDetails[0].receiver_name : '',\n            key: 'reveiverDetails',\n          },\n        ].map((i, key) => (\n          <Row key={i.key}>\n            <Col span={24} className=\"px-2\">\n              {state.receiverDetails.length > 1 ? state.receiverDetails[0].receiver_name : i.value}\n            </Col>\n          </Row>\n        ))}\n      /> */}\n      <br />\n      <CreateTable\n        left={table3.map((i, key) => (\n          <Row key={i.key}>\n            <Col span={24} className=\"px-2\">\n              <b key={i.key}>{i.field}</b>\n            </Col>\n          </Row>\n        ))}\n        right={table3.map((i, key) => (\n          <Row key={i.key}>\n            <Col span={24} className=\"px-2\">\n              <b>{i.value}</b>\n            </Col>\n          </Row>\n        ))}\n      />\n      <br />\n      <Table\n        size=\"small\"\n        pagination={false}\n        bordered\n        dataSource={state.receiverDetails || []}\n        columns={columns}\n      />\n      <br />\n      <Paragraph>\n        * Cycle time to be revisited after regular intervals, pricing may vary if cycle time varies.\n        <br />\n        YANTRA Packs will not be responsible for Loading & Unloading activities at{' '}\n        {state.sender_client}\n        {/* and{' '}\n        {state.receiverDetails.length > 1\n          ? 'Multiple Receivers'\n          : state.receiverDetails[0].receiver_name} */}\n        <br />\n        YANTRA Packs will be responsible for reverse logistics from Destination to Origin.\n        <br />\n        The Commercial Offer is Valid for 30 days.\n      </Paragraph>\n    </div>\n  );\n};\n\nexport default PrintCp;\n"],"sourceRoot":""}